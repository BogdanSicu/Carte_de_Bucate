// <auto-generated />
using Carte_de_bucate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carte_de_bucate.Migrations
{
    [DbContext(typeof(ReteteContext))]
    [Migration("20200916120657_TaraAtributes")]
    partial class TaraAtributes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Carte_de_bucate.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Carte_de_bucate.Models.IngredienteInRetete", b =>
                {
                    b.Property<int>("MancareID")
                        .HasColumnType("int");

                    b.Property<int>("IngrediendID")
                        .HasColumnType("int");

                    b.HasKey("MancareID", "IngrediendID");

                    b.HasIndex("IngrediendID");

                    b.ToTable("Ingrediente_In_Retete");
                });

            modelBuilder.Entity("Carte_de_bucate.Models.Mancare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModPreparare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaraID")
                        .HasColumnType("int");

                    b.Property<int>("TimpPreparare")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaraID");

                    b.ToTable("Mancare");
                });

            modelBuilder.Entity("Carte_de_bucate.Models.Tari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DenumireTara")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tari");
                });

            modelBuilder.Entity("Carte_de_bucate.Models.IngredienteInRetete", b =>
                {
                    b.HasOne("Carte_de_bucate.Models.Ingrediente", "Ingredient")
                        .WithMany("ListaRetete")
                        .HasForeignKey("IngrediendID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carte_de_bucate.Models.Mancare", "Mancare")
                        .WithMany("ListaIngrediente")
                        .HasForeignKey("MancareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Carte_de_bucate.Models.Mancare", b =>
                {
                    b.HasOne("Carte_de_bucate.Models.Tari", "Tara")
                        .WithMany("ListaMancaruri")
                        .HasForeignKey("TaraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
